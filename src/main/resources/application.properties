spring.application.name=sodamsodam web2ndteam

# insert .env file
spring.config.import=optional:file:.env[.properties]

# Database Configuration
spring.datasource.url=${DB_URL:}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# detail errors (develop)
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

# Swagger Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# Docker Swagger
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# JWT
jwt.secret=${JWT_SECRET}

# docker
server.port=8080

# kakao
# Kakao OAuth
kakao.client.id=${KAKAO_CLIENT_ID}
#kakao.client.secret=${KAKAO_CLIENT_SECRET}
kakao.redirect.uri=${KAKAO_REDIRECT_URI}

# AWS S3
cloud.aws.credentials.access-key=${MY_AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${MY_AWS_SECRET_KEY}
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=sodams
cloud.aws.stack.auto=false

# Multipart
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB