events {
    worker_connections 1024;
}

http {
    # 기본 설정
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 설정
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # gzip 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 업스트림 서버 설정 (Spring Boot 앱)
    upstream spring-app {
        server spring:8080;  # docker-compose 서비스명:포트
    }

    # 메인 서버 설정
    server {
        listen 80;
        server_name localhost;  # 나중에 도메인으로 변경 가능

        # 클라이언트 요청 크기 제한 (파일 업로드용)
        client_max_body_size 10M;

        # 프록시 헤더 설정
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API 요청을 Spring Boot로 전달
        location /api/ {
            proxy_pass http://spring-app;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Swagger UI 요청 전달
        location /swagger-ui/ {
            proxy_pass http://spring-app;
        }

        location /v3/api-docs {
            proxy_pass http://spring-app;
        }

        # 메인 페이지 (나중에 프론트엔드 추가 시 사용)
        location / {
            proxy_pass http://spring-app;
            # 만약 정적 파일을 nginx에서 직접 서빙하고 싶다면
            # root /usr/share/nginx/html;
            # index index.html;
        }

        # 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}